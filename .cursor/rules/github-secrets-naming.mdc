# GitHub Secrets設定値名変更ルール

## 基本原則

### 1. 設定値名の変更禁止
- **GitHub Secretsの設定値名を勝手に変更してはいけない**
- 既存の設定値名は、ユーザーが設定した通りに使用する
- 設定値名の変更は、ユーザーの明示的な指示がある場合のみ実施

### 2. 変更前の確認手順
設定値名を変更する場合は、以下の手順を必ず実行する：

1. **現在の設定値名を確認**
   - ワークフローファイル内での使用箇所を検索
   - ドキュメントファイルでの記載を確認
   - 実際のGitHub Secrets設定を確認

2. **変更の必要性を検討**
   - 変更が必要な理由を明確化
   - 変更による影響範囲を特定
   - 代替案がないか検討

3. **ユーザーへの確認**
   - 変更の理由を説明
   - 変更内容を明示
   - ユーザーの承認を得る

### 3. 変更時の手順

#### 変更前
```
ユーザーへの確認メッセージ例：
「設定値名をSAKURA_APP_PORTからSAKURA_PORTに変更する必要があります。
変更しますか？」
```

#### 変更後
- 変更内容を記録
- 影響範囲を文書化
- ユーザーに変更完了を報告

## 禁止事項

### 絶対に禁止
- 設定値名の勝手な変更
- 推測による設定値名の変更
- 一貫性のためだけの変更
- ベストプラクティスに基づく勝手な変更

### 変更前の確認なしでの変更
- ユーザーの指示なしでの変更
- 変更理由の説明なしでの変更
- 影響範囲の説明なしでの変更

## 推奨事項

### 設定値名の確認方法
1. **ワークフローファイルの検索**
   ```bash
   grep -r "secrets\." .github/workflows/
   ```

2. **ドキュメントの確認**
   - READMEファイル
   - デプロイメントガイド
   - 設定ファイル

3. **実際の設定確認**
   - GitHub Webインターフェースでの確認
   - ユーザーへの直接確認

### 変更が必要な場合の対応
1. **問題の特定**
   - 設定値名の不一致によるエラー
   - 機能の不具合
   - セキュリティ上の問題

2. **変更提案**
   - 変更理由の明確な説明
   - 変更内容の詳細
   - 影響範囲の説明

3. **承認後の変更**
   - ユーザーの明示的な承認を得る
   - 変更を実施
   - 変更内容の確認

## 優先順位

1. **既存設定の尊重**: ユーザーが設定した値名を最優先
2. **変更前の確認**: 必ずユーザーの承認を得る
3. **影響範囲の最小化**: 必要最小限の変更のみ実施
4. **文書化**: 変更内容と理由を記録

## 例外事項

### 変更が許可される場合
- ユーザーからの明示的な変更指示
- セキュリティ上の重大な問題
- 機能の完全な停止を招く設定値名の誤り

### 変更時の注意事項
- 変更理由を明確に説明
- 影響範囲を詳細に説明
- ユーザーの承認を得てから変更
- 変更内容を記録・文書化
description:
globs:
alwaysApply: false
---
