# エラー調査と修正対応ルール

## 基本原則

### 1. 影響範囲の徹底調査
- エラーログを詳細に分析し、根本原因を特定する
- エラーが発生している箇所とその関連ファイルを特定する
- エラーの影響範囲を明確に把握する

### 2. 最小限の修正対応
- **影響ない箇所、エラーとは関係ない箇所は修正しない**
- エラーの原因となっている箇所のみを修正する
- 不要な変更やリファクタリングは行わない

### 3. 段階的なアプローチ
1. エラーログの詳細分析
2. 影響範囲の特定
3. 根本原因の特定
4. 最小限の修正実施
5. 修正内容の検証

## 調査手順

### エラーログ分析
- エラーメッセージの詳細な内容を確認
- エラーの発生箇所（ファイル名、行番号）を特定
- エラーの種類（構文エラー、実行時エラー、設定エラー等）を判別

### 影響範囲調査
- エラーが発生しているファイルの依存関係を調査
- 関連する設定ファイルや環境変数を確認
- 他のファイルへの影響の有無を確認

### 根本原因特定
- エラーの直接的な原因を特定
- 環境固有の問題か、コードの問題かを判別
- 設定の問題か、実装の問題かを明確化

## 修正対応のガイドライン

### 修正対象の限定
- エラーの原因となっている箇所のみを修正
- 関連する設定や環境変数のみを調整
- 不要なファイルやコードの変更は避ける

### 修正内容の検証
- 修正後にエラーが解消されることを確認
- 他の機能に影響がないことを検証
- 必要に応じてテストを実行

### ドキュメント化
- 修正内容と理由を明確に記録
- 影響範囲と修正対象を文書化
- 今後の参考となる情報を整理

## 禁止事項

- エラーと無関係なコードの変更
- 不要なリファクタリングや最適化
- 影響範囲外のファイルの修正
- 推測による修正の実施

## 優先順位

1. **エラーの解消**: 最優先でエラーを修正
2. **影響範囲の最小化**: 必要最小限の修正のみ実施
3. **安定性の確保**: 修正による新たな問題の発生を防ぐ
4. **保守性の維持**: 既存のコード構造を可能な限り保持
