name: Deploy to Sakura Internet

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        python manage.py test
    
    - name: Collect static files
      run: |
        python manage.py collectstatic --noinput
    
    - name: Create deployment package
      run: |
        # 一時ディレクトリを作成
        mkdir -p temp_deploy
        
        # 必要なファイルをコピー（エラーチェック付き）
        for item in kakeibo_app kakeibo_project templates static; do
          if [ -d "$item" ]; then
            cp -r "$item" temp_deploy/
          else
            echo "Warning: Directory $item not found"
          fi
        done
        
        for item in manage.py requirements.txt Procfile runtime.txt env.example sakura_settings.py env.sakura.example gunicorn_sakura.conf.py Procfile.sakura DEPLOY_SAKURA.md; do
          if [ -f "$item" ]; then
            cp "$item" temp_deploy/
          else
            echo "Warning: File $item not found"
          fi
        done
        
        # デプロイパッケージを作成
        cd temp_deploy
        tar -czf ../deploy.tar.gz .
        cd ..
        
        # 一時ディレクトリを削除
        rm -rf temp_deploy

    - name: Deploy to Sakura Internet
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.SAKURA_HOST }}
        username: ${{ secrets.SAKURA_USERNAME }}
        password: ${{ secrets.SAKURA_PASSWORD }}
        key: ${{ secrets.SAKURA_SSH_KEY || '' }}
        port: ${{ secrets.SAKURA_SSH_PORT || 22 }}
        source: "deploy.tar.gz"
        target: "${{ secrets.SAKURA_DEPLOY_PATH || format('/home/{0}/', secrets.SAKURA_USERNAME) }}"
        strip_components: 0
        debug: true
    
    - name: Execute deployment commands
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SAKURA_HOST }}
        username: ${{ secrets.SAKURA_USERNAME }}
        password: ${{ secrets.SAKURA_PASSWORD }}
        key: ${{ secrets.SAKURA_SSH_KEY || '' }}
        port: ${{ secrets.SAKURA_SSH_PORT || 22 }}
        script: |
          set -e  # エラー時に停止
          
          # デプロイパスを設定
          DEPLOY_PATH="${SAKURA_DEPLOY_PATH:-/home/${{ secrets.SAKURA_USERNAME }}/}"
          APP_PORT="${SAKURA_APP_PORT:-8000}"
          
          echo "Deploying to: $DEPLOY_PATH"
          echo "Application port: $APP_PORT"
          
          # デプロイディレクトリに移動
          cd "$DEPLOY_PATH"
          
          # 既存のファイルをバックアップ
          if [ -d "kakeibo_backup" ]; then
            rm -rf kakeibo_backup
          fi
          if [ -d "kakeibo" ]; then
            mv kakeibo kakeibo_backup
          fi
          
          # 新しいファイルを展開
          tar -xzf deploy.tar.gz
          mv kakeibo kakeibo_temp
          mv kakeibo_temp/* kakeibo/
          rmdir kakeibo_temp
          
          # 環境変数ファイルを設定
          if [ ! -f "kakeibo/.env" ]; then
            cp kakeibo/env.example kakeibo/.env
            echo "Created .env file from template"
          fi
          
          # 仮想環境を作成・更新
          cd kakeibo
          if [ ! -d "venv" ]; then
            echo "Creating virtual environment..."
            python3 -m venv venv
          fi
          
          echo "Activating virtual environment..."
          source venv/bin/activate
          
          echo "Installing dependencies..."
          pip install --upgrade pip
          pip install -r requirements.txt
          
          # データベースマイグレーション
          echo "Running database migrations..."
          python manage.py migrate --noinput
          
          # 静的ファイルを収集
          echo "Collecting static files..."
          python manage.py collectstatic --noinput
          
          # アプリケーションを再起動
          echo "Restarting application..."
          if [ -f "$DEPLOY_PATH/kakeibo.pid" ]; then
            kill $(cat "$DEPLOY_PATH/kakeibo.pid") || true
            rm "$DEPLOY_PATH/kakeibo.pid"
          fi
          
          # 新しいプロセスを開始
          nohup "$DEPLOY_PATH/kakeibo/venv/bin/gunicorn" \
            --bind "0.0.0.0:$APP_PORT" \
            --workers 2 \
            --pid "$DEPLOY_PATH/kakeibo.pid" \
            kakeibo_project.wsgi:application > "$DEPLOY_PATH/kakeibo.log" 2>&1 &
          
          # プロセスが起動したか確認
          sleep 3
          if [ -f "$DEPLOY_PATH/kakeibo.pid" ]; then
            echo "Application started successfully with PID: $(cat $DEPLOY_PATH/kakeibo.pid)"
          else
            echo "Warning: Application may not have started properly"
            exit 1
          fi
          
          echo "Deployment completed successfully!" 